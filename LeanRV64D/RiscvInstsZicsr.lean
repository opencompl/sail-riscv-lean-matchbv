import LeanRV64D.RiscvInstsMext

set_option maxHeartbeats 1_000_000_000
set_option maxRecDepth 1_000_000
set_option linter.unusedVariables false
set_option match.ignoreUnusedAlts true

open Sail

noncomputable section

namespace LeanRV64D.Functions

open zvkfunct6
open zicondop
open wxfunct6
open wvxfunct6
open wvvfunct6
open wvfunct6
open write_kind
open word_width
open wmvxfunct6
open wmvvfunct6
open vxsgfunct6
open vxmsfunct6
open vxmfunct6
open vxmcfunct6
open vxfunct6
open vxcmpfunct6
open vvmsfunct6
open vvmfunct6
open vvmcfunct6
open vvfunct6
open vvcmpfunct6
open vregno
open vregidx
open vmlsop
open vlewidth
open visgfunct6
open virtaddr
open vimsfunct6
open vimfunct6
open vimcfunct6
open vifunct6
open vicmpfunct6
open vfwunary0
open vfunary1
open vfunary0
open vfnunary0
open vext8funct6
open vext4funct6
open vext2funct6
open uop
open sopw
open sop
open seed_opst
open rounding_mode
open ropw
open rop
open rmvvfunct6
open rivvfunct6
open rfvvfunct6
open regno
open regidx
open read_kind
open pmpMatch
open pmpAddrMatch
open physaddr
open option
open nxsfunct6
open nxfunct6
open nvsfunct6
open nvfunct6
open nisfunct6
open nifunct6
open mvxmafunct6
open mvxfunct6
open mvvmafunct6
open mvvfunct6
open mmfunct6
open maskfunct3
open iop
open fwvvmafunct6
open fwvvfunct6
open fwvfunct6
open fwvfmafunct6
open fwvffunct6
open fwffunct6
open fvvmfunct6
open fvvmafunct6
open fvvfunct6
open fvfmfunct6
open fvfmafunct6
open fvffunct6
open fregno
open fregidx
open f_un_x_op_H
open f_un_x_op_D
open f_un_rm_xf_op_S
open f_un_rm_xf_op_H
open f_un_rm_xf_op_D
open f_un_rm_fx_op_S
open f_un_rm_fx_op_H
open f_un_rm_fx_op_D
open f_un_rm_ff_op_S
open f_un_rm_ff_op_H
open f_un_rm_ff_op_D
open f_un_op_x_S
open f_un_op_f_S
open f_un_f_op_H
open f_un_f_op_D
open f_madd_op_S
open f_madd_op_H
open f_madd_op_D
open f_bin_x_op_H
open f_bin_x_op_D
open f_bin_rm_op_S
open f_bin_rm_op_H
open f_bin_rm_op_D
open f_bin_op_x_S
open f_bin_op_f_S
open f_bin_f_op_H
open f_bin_f_op_D
open extop_zbb
open extension
open exception
open ctl_result
open csrop
open cregidx
open checked_cbop
open cbop_zicbom
open cbie
open bropw_zbb
open bropw_zba
open brop_zbs
open brop_zbkb
open brop_zbb
open brop_zba
open bop
open biop_zbs
open barrier_kind
open ast
open amoop
open agtype
open TrapVectorMode
open TR_Result
open Step
open SATPMode
open Register
open Privilege
open PmpAddrMatchType
open PTW_Error
open PTE_Check
open InterruptType
open HartState
open FetchResult
open Ext_PhysAddr_Check
open Ext_FetchAddr_Check
open Ext_DataAddr_Check
open Ext_ControlAddr_Check
open ExtStatus
open ExecutionResult
open ExceptionType
open Architecture
open AccessType

def encdec_csrop_forwards (arg_ : csrop) : (BitVec 2) :=
  match arg_ with
  | CSRRW => (0b01 : (BitVec 2))
  | CSRRS => (0b10 : (BitVec 2))
  | CSRRC => (0b11 : (BitVec 2))

def encdec_csrop_backwards (arg_ : (BitVec 2)) : SailM csrop := do
  match_bv arg_ with
  | 01 => do (pure CSRRW)
  | 10 => do (pure CSRRS)
  | 11 => do (pure CSRRC)
  | _ => do
    (do
      assert false "Pattern match failure at unknown location"
      throw Error.Exit)

def encdec_csrop_forwards_matches (arg_ : csrop) : Bool :=
  match arg_ with
  | CSRRW => true
  | CSRRS => true
  | CSRRC => true
  | _ => false

def encdec_csrop_backwards_matches (arg_ : (BitVec 2)) : Bool :=
  match_bv arg_ with
  | 01 => true
  | 10 => true
  | 11 => true
  | _ => false

def read_CSR (merge_var : (BitVec 12)) : SailM (BitVec (2 ^ 3 * 8)) := do
  match_bv merge_var with
  | 001100000001 => do readReg misa
  | 001100000000 => do (pure (Sail.BitVec.extractLsb (← readReg mstatus) (xlen -i 1) 0))
  | 001100010000 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg mstatus) 63 32))
  | 001100001010 => do (pure (Sail.BitVec.extractLsb (← readReg menvcfg) (xlen -i 1) 0))
  | 001100011010 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg menvcfg) 63 32))
  | 000100001010 => do (pure (Sail.BitVec.extractLsb (← readReg senvcfg) (xlen -i 1) 0))
  | 001100000100 => do readReg mie
  | 001101000100 => do readReg mip
  | 001100000010 => do (pure (Sail.BitVec.extractLsb (← readReg medeleg) (xlen -i 1) 0))
  | 001100010010 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg medeleg) 63 32))
  | 001100000011 => do readReg mideleg
  | 001101000010 => do readReg mcause
  | 001101000011 => do readReg mtval
  | 001101000000 => do readReg mscratch
  | 000100000110 => do (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg scounteren)))
  | 001100000110 => do (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg mcounteren)))
  | 001100100000 => do (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg mcountinhibit)))
  | 111100010001 => do (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg mvendorid)))
  | 111100010010 => do readReg marchid
  | 111100010011 => do readReg mimpid
  | 111100010100 => do readReg mhartid
  | 111100010101 => do readReg mconfigptr
  | 000100000000 => do
    (pure (Sail.BitVec.extractLsb (lower_mstatus (← readReg mstatus)) (xlen -i 1) 0))
  | 000101000100 => do (pure (lower_mip (← readReg mip) (← readReg mideleg)))
  | 000100000100 => do (pure (lower_mie (← readReg mie) (← readReg mideleg)))
  | 000101000000 => do readReg sscratch
  | 000101000010 => do readReg scause
  | 000101000011 => do readReg stval
  | 011110100000 => do (pure (Complement.complement (← readReg tselect)))
  | [00111010,idx:4] if (((BitVec.access idx 0) == 0#1) || (xlen == 32)) => do
    (pmpReadCfgReg (BitVec.toNat idx))
  | [00111011,idx:4] => do (pmpReadAddrReg (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx)))
  | [00111100,idx:4] => do (pmpReadAddrReg (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx)))
  | [00111101,idx:4] => do (pmpReadAddrReg (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx)))
  | [00111110,idx:4] => do (pmpReadAddrReg (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx)))
  | 000000001000 => do (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart)))
  | 000000001001 => do
    (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxsat (← readReg vcsr))))
  | 000000001010 => do
    (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxrm (← readReg vcsr))))
  | 000000001111 => do (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr)))
  | 110000100000 => do readReg vl
  | 110000100001 => do readReg vtype
  | 110000100010 => do (pure (get_vlenb ()))
  | 000100000101 => do (get_stvec ())
  | 000101000001 => do (get_xepc Supervisor)
  | 001100000101 => do (get_mtvec ())
  | 001101000001 => do (get_xepc Machine)
  | [0011001,index:5] if ((BitVec.toNat index) ≥b 3) => do
    (read_mhpmevent (← (hpmidx_from_bits index)))
  | [1011000,index:5] if ((BitVec.toNat index) ≥b 3) => do
    (read_mhpmcounter (← (hpmidx_from_bits index)))
  | [1011100,index:5] if ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool)) => do
    (read_mhpmcounterh (← (hpmidx_from_bits index)))
  | [1100000,index:5] if ((BitVec.toNat index) ≥b 3) => do
    (read_mhpmcounter (← (hpmidx_from_bits index)))
  | [1100100,index:5] if ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool)) => do
    (read_mhpmcounterh (← (hpmidx_from_bits index)))
  | [0111001,index:5] if ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool)) => do
    (read_mhpmeventh (← (hpmidx_from_bits index)))
  | 110110100000 => do
    (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← (get_scountovf (← readReg cur_privilege)))))
  | 000000010101 => do (read_seed_csr ())
  | 110000000000 => do (pure (Sail.BitVec.extractLsb (← readReg mcycle) (xlen -i 1) 0))
  | 110000000001 => do (pure (Sail.BitVec.extractLsb (← readReg mtime) (xlen -i 1) 0))
  | 110000000010 => do (pure (Sail.BitVec.extractLsb (← readReg minstret) (xlen -i 1) 0))
  | 110010000000 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg mcycle) 63 32))
  | 110010000001 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg mtime) 63 32))
  | 110010000010 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg minstret) 63 32))
  | 101100000000 => do (pure (Sail.BitVec.extractLsb (← readReg mcycle) (xlen -i 1) 0))
  | 101100000010 => do (pure (Sail.BitVec.extractLsb (← readReg minstret) (xlen -i 1) 0))
  | 101110000000 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg mcycle) 63 32))
  | 101110000010 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg minstret) 63 32))
  | 000000000001 => do
    (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FFLAGS (← readReg fcsr))))
  | 000000000010 => do
    (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr))))
  | 000000000011 => do (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr)))
  | 001100100001 => do (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0))
  | 011100100001 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32))
  | 001100100010 => do (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0))
  | 011100100010 if (xlen == 32) => do
    (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32))
  | 000101001101 => do (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0))
  | 000101011101 if (xlen == 32) => do (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32))
  | 000110000000 => do readReg satp
  | csr => do
    (internal_error "riscv_csr_end.sail" 17
      (HAppend.hAppend "Read from CSR that does not exist: " (BitVec.toFormatted csr)))

def write_CSR (arg0 : (BitVec 12)) (arg1 : (BitVec (2 ^ 3 * 8))) : SailM (BitVec (2 ^ 3 * 8)) := do
  let merge_var := (arg0, arg1)
  match merge_var with
  | (0b001100000001, value) =>
    (do
      writeReg misa (← (legalize_misa (← readReg misa) value))
      readReg misa)
  | (0b001100000000, value) =>
    (do
      bif (xlen == 64)
      then
        (do
          writeReg mstatus (← (legalize_mstatus (← readReg mstatus) value))
          readReg mstatus)
      else
        (do
          bif (xlen == 32)
          then
            (do
              writeReg mstatus (← (legalize_mstatus (← readReg mstatus)
                  ((Sail.BitVec.extractLsb (← readReg mstatus) 63 32) ++ value)))
              (pure (Sail.BitVec.extractLsb (← readReg mstatus) 31 0)))
          else
            (do
              match ((0x300 : (BitVec 12)), value) with
              | ([0b00111010,idx:4], value) =>
                (do
                  bif (((BitVec.access idx 0) == 0#1) || (xlen == 32))
                  then
                    (do
                      let idx := (BitVec.toNat idx)
                      (pmpWriteCfgReg idx value)
                      (pmpReadCfgReg idx))
                  else
                    (do
                      match (((0x3A : (BitVec 8)) ++ idx), value) with
                      | ([0b00111011,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111100,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111101,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111110,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | (0b000000001000, value) =>
                        (do
                          (set_vstart (Sail.BitVec.extractLsb value 15 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
                      | (0b000000001001, value) =>
                        (do
                          (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr))
                            (Sail.BitVec.extractLsb value 0 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Vcsr_vxsat (← readReg vcsr)))))
                      | (0b000000001010, value) =>
                        (do
                          (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0)
                            (_get_Vcsr_vxsat (← readReg vcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Vcsr_vxrm (← readReg vcsr)))))
                      | (0b000000001111, value) =>
                        (do
                          (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1)
                            (Sail.BitVec.extractLsb value 0 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
                      | (0b000100000101, value) => (set_stvec value)
                      | (0b000101000001, value) => (set_xepc Supervisor value)
                      | (0b001100000101, value) => (set_mtvec value)
                      | (0b001101000001, value) => (set_xepc Machine value)
                      | ([0b0011001,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmevent index value)
                              (read_mhpmevent index))
                          else
                            (do
                              match (((0b0011001 : (BitVec 7)) ++ index), value) with
                              | ([0b1011000,index:5], value) =>
                                (do
                                  bif ((BitVec.toNat index) ≥b 3)
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounter index value)
                                      (read_mhpmcounter index))
                                  else
                                    (do
                                      match (((0b1011000 : (BitVec 7)) ++ index), value) with
                                      | ([0b1011100,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmcounterh index value)
                                              (read_mhpmcounterh index))
                                          else
                                            (do
                                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                              | ([0b0111001,index:5], value) =>
                                                (do
                                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                                  then
                                                    (do
                                                      let index ← do (hpmidx_from_bits index)
                                                      (write_mhpmeventh index value)
                                                      (read_mhpmeventh index))
                                                  else
                                                    (do
                                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                                      | (0b000000010101, value) =>
                                                        (pure (write_seed_csr ()))
                                                      | (0b101100000000, value) =>
                                                        (do
                                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                                          (pure value))
                                                      | (0b101100000010, value) =>
                                                        (do
                                                          writeReg minstret (Sail.BitVec.updateSubrange
                                                            (← readReg minstret) (xlen -i 1) 0
                                                            value)
                                                          writeReg minstret_increment false
                                                          (pure value))
                                                      | (0b101110000000, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                                (← readReg mcycle) 63 32 value)
                                                              (pure value))
                                                          else
                                                            (do
                                                              match ((0xB80 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b101110000010, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                                (← readReg minstret) 63 32 value)
                                                              writeReg minstret_increment false
                                                              (pure value))
                                                          else
                                                            (do
                                                              match ((0xB82 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000000000001, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (_get_Fcsr_FRM (← readReg fcsr))
                                                            (Sail.BitVec.extractLsb value 4 0))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                                      | (0b000000000010, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (Sail.BitVec.extractLsb value 2 0)
                                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                                      | (0b000000000011, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (Sail.BitVec.extractLsb value 7 5)
                                                            (Sail.BitVec.extractLsb value 4 0))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (← readReg fcsr))))
                                                      | (0b001100100001, value) =>
                                                        (do
                                                          bif (xlen == 64)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg) value))
                                                              readReg mcyclecfg)
                                                          else
                                                            (do
                                                              bif (xlen == 32)
                                                              then
                                                                (do
                                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                      (← readReg mcyclecfg)
                                                                      ((Sail.BitVec.extractLsb
                                                                          (← readReg mcyclecfg) 63
                                                                          32) ++ value)))
                                                                  (pure (Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg)
                                                                      (xlen -i 1) 0)))
                                                              else
                                                                (do
                                                                  match ((0x321 : (BitVec 12)), value) with
                                                                  | (csr, _) =>
                                                                    (internal_error
                                                                      "riscv_csr_end.sail" 23
                                                                      (HAppend.hAppend
                                                                        "Write to CSR that does not exist: "
                                                                        (BitVec.toFormatted csr))))))
                                                      | (0b011100100001, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg)
                                                                  (value ++ (Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg) 31 0))))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x721 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b001100100010, value) =>
                                                        (do
                                                          bif (xlen == 64)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg) value))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              bif (xlen == 32)
                                                              then
                                                                (do
                                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                                      (← readReg minstretcfg)
                                                                      ((Sail.BitVec.extractLsb
                                                                          (← readReg minstretcfg)
                                                                          63 32) ++ value)))
                                                                  (pure (Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg)
                                                                      (xlen -i 1) 0)))
                                                              else
                                                                (do
                                                                  match ((0x322 : (BitVec 12)), value) with
                                                                  | (csr, _) =>
                                                                    (internal_error
                                                                      "riscv_csr_end.sail" 23
                                                                      (HAppend.hAppend
                                                                        "Write to CSR that does not exist: "
                                                                        (BitVec.toFormatted csr))))))
                                                      | (0b011100100010, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg)
                                                                  (value ++ (Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg) 31 0))))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x722 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000101001101, value) =>
                                                        (do
                                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                                            (← readReg stimecmp) (xlen -i 1) 0
                                                            value)
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg stimecmp) (xlen -i 1) 0)))
                                                      | (0b000101011101, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                                (← readReg stimecmp) 63 32 value)
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg stimecmp) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x15D : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000110000000, value) =>
                                                        (do
                                                          writeReg satp (← (legalize_satp
                                                              (← (cur_architecture ()))
                                                              (← readReg satp) value))
                                                          readReg satp)
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011000,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounter index value)
                              (read_mhpmcounter index))
                          else
                            (do
                              match (((0b1011000 : (BitVec 7)) ++ index), value) with
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b00111011,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111100,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111101,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111110,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b0011001,index:5], value) =>
                (do
                  bif ((BitVec.toNat index) ≥b 3)
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmevent index value)
                      (read_mhpmevent index))
                  else
                    (do
                      match (((0b0011001 : (BitVec 7)) ++ index), value) with
                      | ([0b1011000,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounter index value)
                              (read_mhpmcounter index))
                          else
                            (do
                              match (((0b1011000 : (BitVec 7)) ++ index), value) with
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b1011000,index:5], value) =>
                (do
                  bif ((BitVec.toNat index) ≥b 3)
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmcounter index value)
                      (read_mhpmcounter index))
                  else
                    (do
                      match (((0b1011000 : (BitVec 7)) ++ index), value) with
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b1011100,index:5], value) =>
                (do
                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmcounterh index value)
                      (read_mhpmcounterh index))
                  else
                    (do
                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b0111001,index:5], value) =>
                (do
                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmeventh index value)
                      (read_mhpmeventh index))
                  else
                    (do
                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | (csr, _) =>
                (internal_error "riscv_csr_end.sail" 23
                  (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr))))))
  | (0b001100010000, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg mstatus (← (legalize_mstatus (← readReg mstatus)
              (value ++ (Sail.BitVec.extractLsb (← readReg mstatus) 31 0))))
          (pure (Sail.BitVec.extractLsb (← readReg mstatus) 63 32)))
      else
        (do
          match ((0x310 : (BitVec 12)), value) with
          | ([0b00111010,idx:4], value) =>
            (do
              bif (((BitVec.access idx 0) == 0#1) || (xlen == 32))
              then
                (do
                  let idx := (BitVec.toNat idx)
                  (pmpWriteCfgReg idx value)
                  (pmpReadCfgReg idx))
              else
                (do
                  match (((0x3A : (BitVec 8)) ++ idx), value) with
                  | ([0b00111011,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111100,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111101,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111110,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | (0b000000001000, value) =>
                    (do
                      (set_vstart (Sail.BitVec.extractLsb value 15 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
                  | (0b000000001001, value) =>
                    (do
                      (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr))
                        (Sail.BitVec.extractLsb value 0 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxsat (← readReg vcsr)))))
                  | (0b000000001010, value) =>
                    (do
                      (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0)
                        (_get_Vcsr_vxsat (← readReg vcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxrm (← readReg vcsr)))))
                  | (0b000000001111, value) =>
                    (do
                      (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1)
                        (Sail.BitVec.extractLsb value 0 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
                  | (0b000100000101, value) => (set_stvec value)
                  | (0b000101000001, value) => (set_xepc Supervisor value)
                  | (0b001100000101, value) => (set_mtvec value)
                  | (0b001101000001, value) => (set_xepc Machine value)
                  | ([0b0011001,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmevent index value)
                          (read_mhpmevent index))
                      else
                        (do
                          match (((0b0011001 : (BitVec 7)) ++ index), value) with
                          | ([0b1011000,index:5], value) =>
                            (do
                              bif ((BitVec.toNat index) ≥b 3)
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounter index value)
                                  (read_mhpmcounter index))
                              else
                                (do
                                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                                  | ([0b1011100,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmcounterh index value)
                                          (read_mhpmcounterh index))
                                      else
                                        (do
                                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                          | ([0b0111001,index:5], value) =>
                                            (do
                                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                              then
                                                (do
                                                  let index ← do (hpmidx_from_bits index)
                                                  (write_mhpmeventh index value)
                                                  (read_mhpmeventh index))
                                              else
                                                (do
                                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                                  | (0b000000010101, value) =>
                                                    (pure (write_seed_csr ()))
                                                  | (0b101100000000, value) =>
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                                      (pure value))
                                                  | (0b101100000010, value) =>
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) (xlen -i 1) 0 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  | (0b101110000000, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                                            (← readReg mcycle) 63 32 value)
                                                          (pure value))
                                                      else
                                                        (do
                                                          match ((0xB80 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b101110000010, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstret (Sail.BitVec.updateSubrange
                                                            (← readReg minstret) 63 32 value)
                                                          writeReg minstret_increment false
                                                          (pure value))
                                                      else
                                                        (do
                                                          match ((0xB82 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000000000001, value) =>
                                                    (do
                                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                        (Sail.BitVec.extractLsb value 4 0))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                                  | (0b000000000010, value) =>
                                                    (do
                                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                                  | (0b000000000011, value) =>
                                                    (do
                                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                        (Sail.BitVec.extractLsb value 4 0))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (← readReg fcsr))))
                                                  | (0b001100100001, value) =>
                                                    (do
                                                      bif (xlen == 64)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg) value))
                                                          readReg mcyclecfg)
                                                      else
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg)
                                                                  ((Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg) 63 32) ++ value)))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              match ((0x321 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr))))))
                                                  | (0b011100100001, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              (value ++ (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 31 0))))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x721 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b001100100010, value) =>
                                                    (do
                                                      bif (xlen == 64)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg) value))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg)
                                                                  ((Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg) 63
                                                                      32) ++ value)))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              match ((0x322 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr))))))
                                                  | (0b011100100010, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              (value ++ (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 31 0))))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x722 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000101001101, value) =>
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) (xlen -i 1) 0)))
                                                  | (0b000101011101, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                                            (← readReg stimecmp) 63 32 value)
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg stimecmp) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x15D : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000110000000, value) =>
                                                    (do
                                                      writeReg satp (← (legalize_satp
                                                          (← (cur_architecture ()))
                                                          (← readReg satp) value))
                                                      readReg satp)
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011000,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounter index value)
                          (read_mhpmcounter index))
                      else
                        (do
                          match (((0b1011000 : (BitVec 7)) ++ index), value) with
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b00111011,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111100,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111101,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111110,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b0011001,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmevent index value)
                  (read_mhpmevent index))
              else
                (do
                  match (((0b0011001 : (BitVec 7)) ++ index), value) with
                  | ([0b1011000,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounter index value)
                          (read_mhpmcounter index))
                      else
                        (do
                          match (((0b1011000 : (BitVec 7)) ++ index), value) with
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011000,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounter index value)
                  (read_mhpmcounter index))
              else
                (do
                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011100,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounterh index value)
                  (read_mhpmcounterh index))
              else
                (do
                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b0111001,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmeventh index value)
                  (read_mhpmeventh index))
              else
                (do
                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b001100001010, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg menvcfg (← (legalize_menvcfg (← readReg menvcfg)
              ((Sail.BitVec.extractLsb (← readReg menvcfg) 63 32) ++ value)))
          (pure (Sail.BitVec.extractLsb (← readReg menvcfg) 31 0)))
      else
        (do
          bif (xlen == 64)
          then
            (do
              writeReg menvcfg (← (legalize_menvcfg (← readReg menvcfg) value))
              readReg menvcfg)
          else
            (do
              match ((0x30A : (BitVec 12)), value) with
              | ([0b00111010,idx:4], value) =>
                (do
                  bif (((BitVec.access idx 0) == 0#1) || (xlen == 32))
                  then
                    (do
                      let idx := (BitVec.toNat idx)
                      (pmpWriteCfgReg idx value)
                      (pmpReadCfgReg idx))
                  else
                    (do
                      match (((0x3A : (BitVec 8)) ++ idx), value) with
                      | ([0b00111011,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111100,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111101,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111110,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | (0b000000001000, value) =>
                        (do
                          (set_vstart (Sail.BitVec.extractLsb value 15 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
                      | (0b000000001001, value) =>
                        (do
                          (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr))
                            (Sail.BitVec.extractLsb value 0 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Vcsr_vxsat (← readReg vcsr)))))
                      | (0b000000001010, value) =>
                        (do
                          (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0)
                            (_get_Vcsr_vxsat (← readReg vcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Vcsr_vxrm (← readReg vcsr)))))
                      | (0b000000001111, value) =>
                        (do
                          (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1)
                            (Sail.BitVec.extractLsb value 0 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
                      | (0b000100000101, value) => (set_stvec value)
                      | (0b000101000001, value) => (set_xepc Supervisor value)
                      | (0b001100000101, value) => (set_mtvec value)
                      | (0b001101000001, value) => (set_xepc Machine value)
                      | ([0b0011001,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmevent index value)
                              (read_mhpmevent index))
                          else
                            (do
                              match (((0b0011001 : (BitVec 7)) ++ index), value) with
                              | ([0b1011000,index:5], value) =>
                                (do
                                  bif ((BitVec.toNat index) ≥b 3)
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounter index value)
                                      (read_mhpmcounter index))
                                  else
                                    (do
                                      match (((0b1011000 : (BitVec 7)) ++ index), value) with
                                      | ([0b1011100,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmcounterh index value)
                                              (read_mhpmcounterh index))
                                          else
                                            (do
                                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                              | ([0b0111001,index:5], value) =>
                                                (do
                                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                                  then
                                                    (do
                                                      let index ← do (hpmidx_from_bits index)
                                                      (write_mhpmeventh index value)
                                                      (read_mhpmeventh index))
                                                  else
                                                    (do
                                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                                      | (0b000000010101, value) =>
                                                        (pure (write_seed_csr ()))
                                                      | (0b101100000000, value) =>
                                                        (do
                                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                                          (pure value))
                                                      | (0b101100000010, value) =>
                                                        (do
                                                          writeReg minstret (Sail.BitVec.updateSubrange
                                                            (← readReg minstret) (xlen -i 1) 0
                                                            value)
                                                          writeReg minstret_increment false
                                                          (pure value))
                                                      | (0b101110000000, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                                (← readReg mcycle) 63 32 value)
                                                              (pure value))
                                                          else
                                                            (do
                                                              match ((0xB80 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b101110000010, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                                (← readReg minstret) 63 32 value)
                                                              writeReg minstret_increment false
                                                              (pure value))
                                                          else
                                                            (do
                                                              match ((0xB82 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000000000001, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (_get_Fcsr_FRM (← readReg fcsr))
                                                            (Sail.BitVec.extractLsb value 4 0))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                                      | (0b000000000010, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (Sail.BitVec.extractLsb value 2 0)
                                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                                      | (0b000000000011, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (Sail.BitVec.extractLsb value 7 5)
                                                            (Sail.BitVec.extractLsb value 4 0))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (← readReg fcsr))))
                                                      | (0b001100100001, value) =>
                                                        (do
                                                          bif (xlen == 64)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg) value))
                                                              readReg mcyclecfg)
                                                          else
                                                            (do
                                                              bif (xlen == 32)
                                                              then
                                                                (do
                                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                      (← readReg mcyclecfg)
                                                                      ((Sail.BitVec.extractLsb
                                                                          (← readReg mcyclecfg) 63
                                                                          32) ++ value)))
                                                                  (pure (Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg)
                                                                      (xlen -i 1) 0)))
                                                              else
                                                                (do
                                                                  match ((0x321 : (BitVec 12)), value) with
                                                                  | (csr, _) =>
                                                                    (internal_error
                                                                      "riscv_csr_end.sail" 23
                                                                      (HAppend.hAppend
                                                                        "Write to CSR that does not exist: "
                                                                        (BitVec.toFormatted csr))))))
                                                      | (0b011100100001, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg)
                                                                  (value ++ (Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg) 31 0))))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x721 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b001100100010, value) =>
                                                        (do
                                                          bif (xlen == 64)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg) value))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              bif (xlen == 32)
                                                              then
                                                                (do
                                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                                      (← readReg minstretcfg)
                                                                      ((Sail.BitVec.extractLsb
                                                                          (← readReg minstretcfg)
                                                                          63 32) ++ value)))
                                                                  (pure (Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg)
                                                                      (xlen -i 1) 0)))
                                                              else
                                                                (do
                                                                  match ((0x322 : (BitVec 12)), value) with
                                                                  | (csr, _) =>
                                                                    (internal_error
                                                                      "riscv_csr_end.sail" 23
                                                                      (HAppend.hAppend
                                                                        "Write to CSR that does not exist: "
                                                                        (BitVec.toFormatted csr))))))
                                                      | (0b011100100010, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg)
                                                                  (value ++ (Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg) 31 0))))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x722 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000101001101, value) =>
                                                        (do
                                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                                            (← readReg stimecmp) (xlen -i 1) 0
                                                            value)
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg stimecmp) (xlen -i 1) 0)))
                                                      | (0b000101011101, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                                (← readReg stimecmp) 63 32 value)
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg stimecmp) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x15D : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000110000000, value) =>
                                                        (do
                                                          writeReg satp (← (legalize_satp
                                                              (← (cur_architecture ()))
                                                              (← readReg satp) value))
                                                          readReg satp)
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011000,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounter index value)
                              (read_mhpmcounter index))
                          else
                            (do
                              match (((0b1011000 : (BitVec 7)) ++ index), value) with
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b00111011,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111100,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111101,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111110,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b0011001,index:5], value) =>
                (do
                  bif ((BitVec.toNat index) ≥b 3)
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmevent index value)
                      (read_mhpmevent index))
                  else
                    (do
                      match (((0b0011001 : (BitVec 7)) ++ index), value) with
                      | ([0b1011000,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounter index value)
                              (read_mhpmcounter index))
                          else
                            (do
                              match (((0b1011000 : (BitVec 7)) ++ index), value) with
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b1011000,index:5], value) =>
                (do
                  bif ((BitVec.toNat index) ≥b 3)
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmcounter index value)
                      (read_mhpmcounter index))
                  else
                    (do
                      match (((0b1011000 : (BitVec 7)) ++ index), value) with
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b1011100,index:5], value) =>
                (do
                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmcounterh index value)
                      (read_mhpmcounterh index))
                  else
                    (do
                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b0111001,index:5], value) =>
                (do
                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmeventh index value)
                      (read_mhpmeventh index))
                  else
                    (do
                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | (csr, _) =>
                (internal_error "riscv_csr_end.sail" 23
                  (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr))))))
  | (0b001100011010, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg menvcfg (← (legalize_menvcfg (← readReg menvcfg)
              (value ++ (Sail.BitVec.extractLsb (← readReg menvcfg) 31 0))))
          (pure (Sail.BitVec.extractLsb (← readReg menvcfg) 63 32)))
      else
        (do
          match ((0x31A : (BitVec 12)), value) with
          | ([0b00111010,idx:4], value) =>
            (do
              bif (((BitVec.access idx 0) == 0#1) || (xlen == 32))
              then
                (do
                  let idx := (BitVec.toNat idx)
                  (pmpWriteCfgReg idx value)
                  (pmpReadCfgReg idx))
              else
                (do
                  match (((0x3A : (BitVec 8)) ++ idx), value) with
                  | ([0b00111011,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111100,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111101,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111110,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | (0b000000001000, value) =>
                    (do
                      (set_vstart (Sail.BitVec.extractLsb value 15 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
                  | (0b000000001001, value) =>
                    (do
                      (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr))
                        (Sail.BitVec.extractLsb value 0 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxsat (← readReg vcsr)))))
                  | (0b000000001010, value) =>
                    (do
                      (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0)
                        (_get_Vcsr_vxsat (← readReg vcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxrm (← readReg vcsr)))))
                  | (0b000000001111, value) =>
                    (do
                      (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1)
                        (Sail.BitVec.extractLsb value 0 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
                  | (0b000100000101, value) => (set_stvec value)
                  | (0b000101000001, value) => (set_xepc Supervisor value)
                  | (0b001100000101, value) => (set_mtvec value)
                  | (0b001101000001, value) => (set_xepc Machine value)
                  | ([0b0011001,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmevent index value)
                          (read_mhpmevent index))
                      else
                        (do
                          match (((0b0011001 : (BitVec 7)) ++ index), value) with
                          | ([0b1011000,index:5], value) =>
                            (do
                              bif ((BitVec.toNat index) ≥b 3)
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounter index value)
                                  (read_mhpmcounter index))
                              else
                                (do
                                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                                  | ([0b1011100,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmcounterh index value)
                                          (read_mhpmcounterh index))
                                      else
                                        (do
                                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                          | ([0b0111001,index:5], value) =>
                                            (do
                                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                              then
                                                (do
                                                  let index ← do (hpmidx_from_bits index)
                                                  (write_mhpmeventh index value)
                                                  (read_mhpmeventh index))
                                              else
                                                (do
                                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                                  | (0b000000010101, value) =>
                                                    (pure (write_seed_csr ()))
                                                  | (0b101100000000, value) =>
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                                      (pure value))
                                                  | (0b101100000010, value) =>
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) (xlen -i 1) 0 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  | (0b101110000000, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                                            (← readReg mcycle) 63 32 value)
                                                          (pure value))
                                                      else
                                                        (do
                                                          match ((0xB80 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b101110000010, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstret (Sail.BitVec.updateSubrange
                                                            (← readReg minstret) 63 32 value)
                                                          writeReg minstret_increment false
                                                          (pure value))
                                                      else
                                                        (do
                                                          match ((0xB82 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000000000001, value) =>
                                                    (do
                                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                        (Sail.BitVec.extractLsb value 4 0))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                                  | (0b000000000010, value) =>
                                                    (do
                                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                                  | (0b000000000011, value) =>
                                                    (do
                                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                        (Sail.BitVec.extractLsb value 4 0))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (← readReg fcsr))))
                                                  | (0b001100100001, value) =>
                                                    (do
                                                      bif (xlen == 64)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg) value))
                                                          readReg mcyclecfg)
                                                      else
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg)
                                                                  ((Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg) 63 32) ++ value)))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              match ((0x321 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr))))))
                                                  | (0b011100100001, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              (value ++ (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 31 0))))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x721 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b001100100010, value) =>
                                                    (do
                                                      bif (xlen == 64)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg) value))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg)
                                                                  ((Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg) 63
                                                                      32) ++ value)))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              match ((0x322 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr))))))
                                                  | (0b011100100010, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              (value ++ (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 31 0))))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x722 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000101001101, value) =>
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) (xlen -i 1) 0)))
                                                  | (0b000101011101, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                                            (← readReg stimecmp) 63 32 value)
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg stimecmp) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x15D : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000110000000, value) =>
                                                    (do
                                                      writeReg satp (← (legalize_satp
                                                          (← (cur_architecture ()))
                                                          (← readReg satp) value))
                                                      readReg satp)
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011000,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounter index value)
                          (read_mhpmcounter index))
                      else
                        (do
                          match (((0b1011000 : (BitVec 7)) ++ index), value) with
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b00111011,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111100,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111101,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111110,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b0011001,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmevent index value)
                  (read_mhpmevent index))
              else
                (do
                  match (((0b0011001 : (BitVec 7)) ++ index), value) with
                  | ([0b1011000,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounter index value)
                          (read_mhpmcounter index))
                      else
                        (do
                          match (((0b1011000 : (BitVec 7)) ++ index), value) with
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011000,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounter index value)
                  (read_mhpmcounter index))
              else
                (do
                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011100,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounterh index value)
                  (read_mhpmcounterh index))
              else
                (do
                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b0111001,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmeventh index value)
                  (read_mhpmeventh index))
              else
                (do
                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b000100001010, value) =>
    (do
      writeReg senvcfg (← (legalize_senvcfg (← readReg senvcfg)
          (zero_extend (m := ((2 ^i 3) *i 8)) value)))
      (pure (Sail.BitVec.extractLsb (← readReg senvcfg) (xlen -i 1) 0)))
  | (0b001100000100, value) =>
    (do
      writeReg mie (← (legalize_mie (← readReg mie) value))
      readReg mie)
  | (0b001101000100, value) =>
    (do
      writeReg mip (← (legalize_mip (← readReg mip) value))
      readReg mip)
  | (0b001100000010, value) =>
    (do
      bif (xlen == 64)
      then
        (do
          writeReg medeleg (legalize_medeleg (← readReg medeleg) value)
          readReg medeleg)
      else
        (do
          bif (xlen == 32)
          then
            (do
              writeReg medeleg (legalize_medeleg (← readReg medeleg)
                ((Sail.BitVec.extractLsb (← readReg medeleg) 63 32) ++ value))
              (pure (Sail.BitVec.extractLsb (← readReg medeleg) 31 0)))
          else
            (do
              match ((0x302 : (BitVec 12)), value) with
              | ([0b00111010,idx:4], value) =>
                (do
                  bif (((BitVec.access idx 0) == 0#1) || (xlen == 32))
                  then
                    (do
                      let idx := (BitVec.toNat idx)
                      (pmpWriteCfgReg idx value)
                      (pmpReadCfgReg idx))
                  else
                    (do
                      match (((0x3A : (BitVec 8)) ++ idx), value) with
                      | ([0b00111011,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111100,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111101,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | ([0b00111110,idx:4], value) =>
                        (do
                          let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                          (pmpWriteAddrReg idx value)
                          (pmpReadAddrReg idx))
                      | (0b000000001000, value) =>
                        (do
                          (set_vstart (Sail.BitVec.extractLsb value 15 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
                      | (0b000000001001, value) =>
                        (do
                          (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr))
                            (Sail.BitVec.extractLsb value 0 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Vcsr_vxsat (← readReg vcsr)))))
                      | (0b000000001010, value) =>
                        (do
                          (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0)
                            (_get_Vcsr_vxsat (← readReg vcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Vcsr_vxrm (← readReg vcsr)))))
                      | (0b000000001111, value) =>
                        (do
                          (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1)
                            (Sail.BitVec.extractLsb value 0 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
                      | (0b000100000101, value) => (set_stvec value)
                      | (0b000101000001, value) => (set_xepc Supervisor value)
                      | (0b001100000101, value) => (set_mtvec value)
                      | (0b001101000001, value) => (set_xepc Machine value)
                      | ([0b0011001,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmevent index value)
                              (read_mhpmevent index))
                          else
                            (do
                              match (((0b0011001 : (BitVec 7)) ++ index), value) with
                              | ([0b1011000,index:5], value) =>
                                (do
                                  bif ((BitVec.toNat index) ≥b 3)
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounter index value)
                                      (read_mhpmcounter index))
                                  else
                                    (do
                                      match (((0b1011000 : (BitVec 7)) ++ index), value) with
                                      | ([0b1011100,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmcounterh index value)
                                              (read_mhpmcounterh index))
                                          else
                                            (do
                                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                              | ([0b0111001,index:5], value) =>
                                                (do
                                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                                  then
                                                    (do
                                                      let index ← do (hpmidx_from_bits index)
                                                      (write_mhpmeventh index value)
                                                      (read_mhpmeventh index))
                                                  else
                                                    (do
                                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                                      | (0b000000010101, value) =>
                                                        (pure (write_seed_csr ()))
                                                      | (0b101100000000, value) =>
                                                        (do
                                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                                          (pure value))
                                                      | (0b101100000010, value) =>
                                                        (do
                                                          writeReg minstret (Sail.BitVec.updateSubrange
                                                            (← readReg minstret) (xlen -i 1) 0
                                                            value)
                                                          writeReg minstret_increment false
                                                          (pure value))
                                                      | (0b101110000000, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                                (← readReg mcycle) 63 32 value)
                                                              (pure value))
                                                          else
                                                            (do
                                                              match ((0xB80 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b101110000010, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                                (← readReg minstret) 63 32 value)
                                                              writeReg minstret_increment false
                                                              (pure value))
                                                          else
                                                            (do
                                                              match ((0xB82 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000000000001, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (_get_Fcsr_FRM (← readReg fcsr))
                                                            (Sail.BitVec.extractLsb value 4 0))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                                      | (0b000000000010, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (Sail.BitVec.extractLsb value 2 0)
                                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                                      | (0b000000000011, value) =>
                                                        (do
                                                          (write_fcsr
                                                            (Sail.BitVec.extractLsb value 7 5)
                                                            (Sail.BitVec.extractLsb value 4 0))
                                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                              (← readReg fcsr))))
                                                      | (0b001100100001, value) =>
                                                        (do
                                                          bif (xlen == 64)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg) value))
                                                              readReg mcyclecfg)
                                                          else
                                                            (do
                                                              bif (xlen == 32)
                                                              then
                                                                (do
                                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                      (← readReg mcyclecfg)
                                                                      ((Sail.BitVec.extractLsb
                                                                          (← readReg mcyclecfg) 63
                                                                          32) ++ value)))
                                                                  (pure (Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg)
                                                                      (xlen -i 1) 0)))
                                                              else
                                                                (do
                                                                  match ((0x321 : (BitVec 12)), value) with
                                                                  | (csr, _) =>
                                                                    (internal_error
                                                                      "riscv_csr_end.sail" 23
                                                                      (HAppend.hAppend
                                                                        "Write to CSR that does not exist: "
                                                                        (BitVec.toFormatted csr))))))
                                                      | (0b011100100001, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg)
                                                                  (value ++ (Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg) 31 0))))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x721 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b001100100010, value) =>
                                                        (do
                                                          bif (xlen == 64)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg) value))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              bif (xlen == 32)
                                                              then
                                                                (do
                                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                                      (← readReg minstretcfg)
                                                                      ((Sail.BitVec.extractLsb
                                                                          (← readReg minstretcfg)
                                                                          63 32) ++ value)))
                                                                  (pure (Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg)
                                                                      (xlen -i 1) 0)))
                                                              else
                                                                (do
                                                                  match ((0x322 : (BitVec 12)), value) with
                                                                  | (csr, _) =>
                                                                    (internal_error
                                                                      "riscv_csr_end.sail" 23
                                                                      (HAppend.hAppend
                                                                        "Write to CSR that does not exist: "
                                                                        (BitVec.toFormatted csr))))))
                                                      | (0b011100100010, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg)
                                                                  (value ++ (Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg) 31 0))))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x722 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000101001101, value) =>
                                                        (do
                                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                                            (← readReg stimecmp) (xlen -i 1) 0
                                                            value)
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg stimecmp) (xlen -i 1) 0)))
                                                      | (0b000101011101, value) =>
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                                (← readReg stimecmp) 63 32 value)
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg stimecmp) 63 32)))
                                                          else
                                                            (do
                                                              match ((0x15D : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr)))))
                                                      | (0b000110000000, value) =>
                                                        (do
                                                          writeReg satp (← (legalize_satp
                                                              (← (cur_architecture ()))
                                                              (← readReg satp) value))
                                                          readReg satp)
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011000,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounter index value)
                              (read_mhpmcounter index))
                          else
                            (do
                              match (((0b1011000 : (BitVec 7)) ++ index), value) with
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b00111011,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111100,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111101,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b00111110,idx:4], value) =>
                (do
                  let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                  (pmpWriteAddrReg idx value)
                  (pmpReadAddrReg idx))
              | ([0b0011001,index:5], value) =>
                (do
                  bif ((BitVec.toNat index) ≥b 3)
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmevent index value)
                      (read_mhpmevent index))
                  else
                    (do
                      match (((0b0011001 : (BitVec 7)) ++ index), value) with
                      | ([0b1011000,index:5], value) =>
                        (do
                          bif ((BitVec.toNat index) ≥b 3)
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounter index value)
                              (read_mhpmcounter index))
                          else
                            (do
                              match (((0b1011000 : (BitVec 7)) ++ index), value) with
                              | ([0b1011100,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmcounterh index value)
                                      (read_mhpmcounterh index))
                                  else
                                    (do
                                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                      | ([0b0111001,index:5], value) =>
                                        (do
                                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                          then
                                            (do
                                              let index ← do (hpmidx_from_bits index)
                                              (write_mhpmeventh index value)
                                              (read_mhpmeventh index))
                                          else
                                            (do
                                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                              | (0b000000010101, value) =>
                                                (pure (write_seed_csr ()))
                                              | (0b101100000000, value) =>
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) (xlen -i 1) 0 value)
                                                  (pure value))
                                              | (0b101100000010, value) =>
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) (xlen -i 1) 0 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              | (0b101110000000, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) 63 32 value)
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB80 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b101110000010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) 63 32 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  else
                                                    (do
                                                      match ((0xB82 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000000000001, value) =>
                                                (do
                                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                              | (0b000000000010, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                                              | (0b000000000011, value) =>
                                                (do
                                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                    (Sail.BitVec.extractLsb value 4 0))
                                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                      (← readReg fcsr))))
                                              | (0b001100100001, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg) value))
                                                      readReg mcyclecfg)
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                      else
                                                        (do
                                                          match ((0x321 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100001, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x721 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b001100100010, value) =>
                                                (do
                                                  bif (xlen == 64)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg) value))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              ((Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 63 32) ++ value)))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          match ((0x322 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr))))))
                                              | (0b011100100010, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          (value ++ (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 31 0))))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x722 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000101001101, value) =>
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) (xlen -i 1) 0)))
                                              | (0b000101011101, value) =>
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) 63 32 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) 63 32)))
                                                  else
                                                    (do
                                                      match ((0x15D : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr)))))
                                              | (0b000110000000, value) =>
                                                (do
                                                  writeReg satp (← (legalize_satp
                                                      (← (cur_architecture ())) (← readReg satp)
                                                      value))
                                                  readReg satp)
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b1011000,index:5], value) =>
                (do
                  bif ((BitVec.toNat index) ≥b 3)
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmcounter index value)
                      (read_mhpmcounter index))
                  else
                    (do
                      match (((0b1011000 : (BitVec 7)) ++ index), value) with
                      | ([0b1011100,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmcounterh index value)
                              (read_mhpmcounterh index))
                          else
                            (do
                              match (((0b1011100 : (BitVec 7)) ++ index), value) with
                              | ([0b0111001,index:5], value) =>
                                (do
                                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                  then
                                    (do
                                      let index ← do (hpmidx_from_bits index)
                                      (write_mhpmeventh index value)
                                      (read_mhpmeventh index))
                                  else
                                    (do
                                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                                      | (0b101100000000, value) =>
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) (xlen -i 1) 0 value)
                                          (pure value))
                                      | (0b101100000010, value) =>
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) (xlen -i 1) 0 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      | (0b101110000000, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) 63 32 value)
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB80 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b101110000010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) 63 32 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          else
                                            (do
                                              match ((0xB82 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000000000001, value) =>
                                        (do
                                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                      | (0b000000000010, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (_get_Fcsr_FRM (← readReg fcsr)))))
                                      | (0b000000000011, value) =>
                                        (do
                                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                            (Sail.BitVec.extractLsb value 4 0))
                                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                              (← readReg fcsr))))
                                      | (0b001100100001, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg) value))
                                              readReg mcyclecfg)
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x321 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100001, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x721 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b001100100010, value) =>
                                        (do
                                          bif (xlen == 64)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg) value))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      ((Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 63 32) ++ value)))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  match ((0x322 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr))))))
                                      | (0b011100100010, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  (value ++ (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 31 0))))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 63 32)))
                                          else
                                            (do
                                              match ((0x722 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000101001101, value) =>
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) (xlen -i 1) 0 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                              (xlen -i 1) 0)))
                                      | (0b000101011101, value) =>
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) 63 32 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  63 32)))
                                          else
                                            (do
                                              match ((0x15D : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr)))))
                                      | (0b000110000000, value) =>
                                        (do
                                          writeReg satp (← (legalize_satp
                                              (← (cur_architecture ())) (← readReg satp) value))
                                          readReg satp)
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b1011100,index:5], value) =>
                (do
                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmcounterh index value)
                      (read_mhpmcounterh index))
                  else
                    (do
                      match (((0b1011100 : (BitVec 7)) ++ index), value) with
                      | ([0b0111001,index:5], value) =>
                        (do
                          bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                          then
                            (do
                              let index ← do (hpmidx_from_bits index)
                              (write_mhpmeventh index value)
                              (read_mhpmeventh index))
                          else
                            (do
                              match (((0b0111001 : (BitVec 7)) ++ index), value) with
                              | (0b000000010101, value) => (pure (write_seed_csr ()))
                              | (0b101100000000, value) =>
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    (xlen -i 1) 0 value)
                                  (pure value))
                              | (0b101100000010, value) =>
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) (xlen -i 1) 0 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              | (0b101110000000, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) 63 32 value)
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB80 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b101110000010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) 63 32 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  else
                                    (do
                                      match ((0xB82 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000000000001, value) =>
                                (do
                                  (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                              | (0b000000000010, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                    (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                      (_get_Fcsr_FRM (← readReg fcsr)))))
                              | (0b000000000011, value) =>
                                (do
                                  (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                    (Sail.BitVec.extractLsb value 4 0))
                                  (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                              | (0b001100100001, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg) value))
                                      readReg mcyclecfg)
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x321 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100001, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                              31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                                  else
                                    (do
                                      match ((0x721 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b001100100010, value) =>
                                (do
                                  bif (xlen == 64)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg) value))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                                  32) ++ value)))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          match ((0x322 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr))))))
                              | (0b011100100010, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          (value ++ (Sail.BitVec.extractLsb
                                              (← readReg minstretcfg) 31 0))))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                                  else
                                    (do
                                      match ((0x722 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000101001101, value) =>
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) (xlen -i 1) 0 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                              | (0b000101011101, value) =>
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) 63 32 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                  else
                                    (do
                                      match ((0x15D : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr)))))
                              | (0b000110000000, value) =>
                                (do
                                  writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                      (← readReg satp) value))
                                  readReg satp)
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | ([0b0111001,index:5], value) =>
                (do
                  bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                  then
                    (do
                      let index ← do (hpmidx_from_bits index)
                      (write_mhpmeventh index value)
                      (read_mhpmeventh index))
                  else
                    (do
                      match (((0b0111001 : (BitVec 7)) ++ index), value) with
                      | (0b000000010101, value) => (pure (write_seed_csr ()))
                      | (0b101100000000, value) =>
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                            (xlen -i 1) 0 value)
                          (pure value))
                      | (0b101100000010, value) =>
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                            (xlen -i 1) 0 value)
                          writeReg minstret_increment false
                          (pure value))
                      | (0b101110000000, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                                value)
                              (pure value))
                          else
                            (do
                              match ((0xB80 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b101110000010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                63 32 value)
                              writeReg minstret_increment false
                              (pure value))
                          else
                            (do
                              match ((0xB82 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000000000001, value) =>
                        (do
                          (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                      | (0b000000000010, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                            (_get_Fcsr_FFLAGS (← readReg fcsr)))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8))
                              (_get_Fcsr_FRM (← readReg fcsr)))))
                      | (0b000000000011, value) =>
                        (do
                          (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                            (Sail.BitVec.extractLsb value 4 0))
                          (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                      | (0b001100100001, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  value))
                              readReg mcyclecfg)
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1)
                                      0)))
                              else
                                (do
                                  match ((0x321 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100001, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                          else
                            (do
                              match ((0x721 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b001100100010, value) =>
                        (do
                          bif (xlen == 64)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg) value))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  match ((0x322 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr))))))
                      | (0b011100100010, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                          else
                            (do
                              match ((0x722 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000101001101, value) =>
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                            (xlen -i 1) 0 value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                      | (0b000101011101, value) =>
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                63 32 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                          else
                            (do
                              match ((0x15D : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr)))))
                      | (0b000110000000, value) =>
                        (do
                          writeReg satp (← (legalize_satp (← (cur_architecture ()))
                              (← readReg satp) value))
                          readReg satp)
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr)))))
              | (csr, _) =>
                (internal_error "riscv_csr_end.sail" 23
                  (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr))))))
  | (0b001100010010, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg medeleg (legalize_medeleg (← readReg medeleg)
            (value ++ (Sail.BitVec.extractLsb (← readReg medeleg) 31 0)))
          (pure (Sail.BitVec.extractLsb (← readReg medeleg) 63 32)))
      else
        (do
          match ((0x312 : (BitVec 12)), value) with
          | ([0b00111010,idx:4], value) =>
            (do
              bif (((BitVec.access idx 0) == 0#1) || (xlen == 32))
              then
                (do
                  let idx := (BitVec.toNat idx)
                  (pmpWriteCfgReg idx value)
                  (pmpReadCfgReg idx))
              else
                (do
                  match (((0x3A : (BitVec 8)) ++ idx), value) with
                  | ([0b00111011,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111100,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111101,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | ([0b00111110,idx:4], value) =>
                    (do
                      let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
                      (pmpWriteAddrReg idx value)
                      (pmpReadAddrReg idx))
                  | (0b000000001000, value) =>
                    (do
                      (set_vstart (Sail.BitVec.extractLsb value 15 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
                  | (0b000000001001, value) =>
                    (do
                      (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr))
                        (Sail.BitVec.extractLsb value 0 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxsat (← readReg vcsr)))))
                  | (0b000000001010, value) =>
                    (do
                      (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0)
                        (_get_Vcsr_vxsat (← readReg vcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxrm (← readReg vcsr)))))
                  | (0b000000001111, value) =>
                    (do
                      (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1)
                        (Sail.BitVec.extractLsb value 0 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
                  | (0b000100000101, value) => (set_stvec value)
                  | (0b000101000001, value) => (set_xepc Supervisor value)
                  | (0b001100000101, value) => (set_mtvec value)
                  | (0b001101000001, value) => (set_xepc Machine value)
                  | ([0b0011001,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmevent index value)
                          (read_mhpmevent index))
                      else
                        (do
                          match (((0b0011001 : (BitVec 7)) ++ index), value) with
                          | ([0b1011000,index:5], value) =>
                            (do
                              bif ((BitVec.toNat index) ≥b 3)
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounter index value)
                                  (read_mhpmcounter index))
                              else
                                (do
                                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                                  | ([0b1011100,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmcounterh index value)
                                          (read_mhpmcounterh index))
                                      else
                                        (do
                                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                          | ([0b0111001,index:5], value) =>
                                            (do
                                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                              then
                                                (do
                                                  let index ← do (hpmidx_from_bits index)
                                                  (write_mhpmeventh index value)
                                                  (read_mhpmeventh index))
                                              else
                                                (do
                                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                                  | (0b000000010101, value) =>
                                                    (pure (write_seed_csr ()))
                                                  | (0b101100000000, value) =>
                                                    (do
                                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                                      (pure value))
                                                  | (0b101100000010, value) =>
                                                    (do
                                                      writeReg minstret (Sail.BitVec.updateSubrange
                                                        (← readReg minstret) (xlen -i 1) 0 value)
                                                      writeReg minstret_increment false
                                                      (pure value))
                                                  | (0b101110000000, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                                            (← readReg mcycle) 63 32 value)
                                                          (pure value))
                                                      else
                                                        (do
                                                          match ((0xB80 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b101110000010, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstret (Sail.BitVec.updateSubrange
                                                            (← readReg minstret) 63 32 value)
                                                          writeReg minstret_increment false
                                                          (pure value))
                                                      else
                                                        (do
                                                          match ((0xB82 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000000000001, value) =>
                                                    (do
                                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                        (Sail.BitVec.extractLsb value 4 0))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                                  | (0b000000000010, value) =>
                                                    (do
                                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                                  | (0b000000000011, value) =>
                                                    (do
                                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                        (Sail.BitVec.extractLsb value 4 0))
                                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                          (← readReg fcsr))))
                                                  | (0b001100100001, value) =>
                                                    (do
                                                      bif (xlen == 64)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg) value))
                                                          readReg mcyclecfg)
                                                      else
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                                  (← readReg mcyclecfg)
                                                                  ((Sail.BitVec.extractLsb
                                                                      (← readReg mcyclecfg) 63 32) ++ value)))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              match ((0x321 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr))))))
                                                  | (0b011100100001, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                                              (← readReg mcyclecfg)
                                                              (value ++ (Sail.BitVec.extractLsb
                                                                  (← readReg mcyclecfg) 31 0))))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x721 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b001100100010, value) =>
                                                    (do
                                                      bif (xlen == 64)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg) value))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) (xlen -i 1)
                                                              0)))
                                                      else
                                                        (do
                                                          bif (xlen == 32)
                                                          then
                                                            (do
                                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                                  (← readReg minstretcfg)
                                                                  ((Sail.BitVec.extractLsb
                                                                      (← readReg minstretcfg) 63
                                                                      32) ++ value)))
                                                              (pure (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg)
                                                                  (xlen -i 1) 0)))
                                                          else
                                                            (do
                                                              match ((0x322 : (BitVec 12)), value) with
                                                              | (csr, _) =>
                                                                (internal_error "riscv_csr_end.sail"
                                                                  23
                                                                  (HAppend.hAppend
                                                                    "Write to CSR that does not exist: "
                                                                    (BitVec.toFormatted csr))))))
                                                  | (0b011100100010, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                                              (← readReg minstretcfg)
                                                              (value ++ (Sail.BitVec.extractLsb
                                                                  (← readReg minstretcfg) 31 0))))
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x722 : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000101001101, value) =>
                                                    (do
                                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg stimecmp) (xlen -i 1) 0)))
                                                  | (0b000101011101, value) =>
                                                    (do
                                                      bif (xlen == 32)
                                                      then
                                                        (do
                                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                                            (← readReg stimecmp) 63 32 value)
                                                          (pure (Sail.BitVec.extractLsb
                                                              (← readReg stimecmp) 63 32)))
                                                      else
                                                        (do
                                                          match ((0x15D : (BitVec 12)), value) with
                                                          | (csr, _) =>
                                                            (internal_error "riscv_csr_end.sail" 23
                                                              (HAppend.hAppend
                                                                "Write to CSR that does not exist: "
                                                                (BitVec.toFormatted csr)))))
                                                  | (0b000110000000, value) =>
                                                    (do
                                                      writeReg satp (← (legalize_satp
                                                          (← (cur_architecture ()))
                                                          (← readReg satp) value))
                                                      readReg satp)
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011000,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounter index value)
                          (read_mhpmcounter index))
                      else
                        (do
                          match (((0b1011000 : (BitVec 7)) ++ index), value) with
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b00111011,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111100,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111101,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111110,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b0011001,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmevent index value)
                  (read_mhpmevent index))
              else
                (do
                  match (((0b0011001 : (BitVec 7)) ++ index), value) with
                  | ([0b1011000,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounter index value)
                          (read_mhpmcounter index))
                      else
                        (do
                          match (((0b1011000 : (BitVec 7)) ++ index), value) with
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011000,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounter index value)
                  (read_mhpmcounter index))
              else
                (do
                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011100,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounterh index value)
                  (read_mhpmcounterh index))
              else
                (do
                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b0111001,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmeventh index value)
                  (read_mhpmeventh index))
              else
                (do
                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b001100000011, value) =>
    (do
      writeReg mideleg (legalize_mideleg (← readReg mideleg) value)
      readReg mideleg)
  | (0b001101000010, value) =>
    (do
      writeReg mcause value
      readReg mcause)
  | (0b001101000011, value) =>
    (do
      writeReg mtval value
      readReg mtval)
  | (0b001101000000, value) =>
    (do
      writeReg mscratch value
      readReg mscratch)
  | (0b000100000110, value) =>
    (do
      writeReg scounteren (legalize_scounteren (← readReg scounteren) value)
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg scounteren))))
  | (0b001100000110, value) =>
    (do
      writeReg mcounteren (legalize_mcounteren (← readReg mcounteren) value)
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg mcounteren))))
  | (0b001100100000, value) =>
    (do
      writeReg mcountinhibit (legalize_mcountinhibit (← readReg mcountinhibit) value)
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg mcountinhibit))))
  | (0b000100000000, value) =>
    (do
      writeReg mstatus (← (legalize_sstatus (← readReg mstatus) value))
      (pure (Sail.BitVec.extractLsb (← readReg mstatus) (xlen -i 1) 0)))
  | (0b000101000100, value) =>
    (do
      writeReg mip (legalize_sip (← readReg mip) (← readReg mideleg) value)
      readReg mip)
  | (0b000100000100, value) =>
    (do
      writeReg mie (legalize_sie (← readReg mie) (← readReg mideleg) value)
      readReg mie)
  | (0b000101000000, value) =>
    (do
      writeReg sscratch value
      readReg sscratch)
  | (0b000101000010, value) =>
    (do
      writeReg scause value
      readReg scause)
  | (0b000101000011, value) =>
    (do
      writeReg stval value
      readReg stval)
  | (0b011110100000, value) =>
    (do
      writeReg tselect value
      readReg tselect)
  | ([0b00111010,idx:4], value) =>
    (do
      bif (((BitVec.access idx 0) == 0#1) || (xlen == 32))
      then
        (do
          let idx := (BitVec.toNat idx)
          (pmpWriteCfgReg idx value)
          (pmpReadCfgReg idx))
      else
        (do
          match (((0x3A : (BitVec 8)) ++ idx), value) with
          | ([0b00111011,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111100,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111101,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | ([0b00111110,idx:4], value) =>
            (do
              let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
              (pmpWriteAddrReg idx value)
              (pmpReadAddrReg idx))
          | (0b000000001000, value) =>
            (do
              (set_vstart (Sail.BitVec.extractLsb value 15 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
          | (0b000000001001, value) =>
            (do
              (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr)) (Sail.BitVec.extractLsb value 0 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxsat (← readReg vcsr)))))
          | (0b000000001010, value) =>
            (do
              (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0)
                (_get_Vcsr_vxsat (← readReg vcsr)))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxrm (← readReg vcsr)))))
          | (0b000000001111, value) =>
            (do
              (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1) (Sail.BitVec.extractLsb value 0 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
          | (0b000100000101, value) => (set_stvec value)
          | (0b000101000001, value) => (set_xepc Supervisor value)
          | (0b001100000101, value) => (set_mtvec value)
          | (0b001101000001, value) => (set_xepc Machine value)
          | ([0b0011001,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmevent index value)
                  (read_mhpmevent index))
              else
                (do
                  match (((0b0011001 : (BitVec 7)) ++ index), value) with
                  | ([0b1011000,index:5], value) =>
                    (do
                      bif ((BitVec.toNat index) ≥b 3)
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounter index value)
                          (read_mhpmcounter index))
                      else
                        (do
                          match (((0b1011000 : (BitVec 7)) ++ index), value) with
                          | ([0b1011100,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmcounterh index value)
                                  (read_mhpmcounterh index))
                              else
                                (do
                                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                                  | ([0b0111001,index:5], value) =>
                                    (do
                                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                                      then
                                        (do
                                          let index ← do (hpmidx_from_bits index)
                                          (write_mhpmeventh index value)
                                          (read_mhpmeventh index))
                                      else
                                        (do
                                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                                          | (0b101100000000, value) =>
                                            (do
                                              writeReg mcycle (Sail.BitVec.updateSubrange
                                                (← readReg mcycle) (xlen -i 1) 0 value)
                                              (pure value))
                                          | (0b101100000010, value) =>
                                            (do
                                              writeReg minstret (Sail.BitVec.updateSubrange
                                                (← readReg minstret) (xlen -i 1) 0 value)
                                              writeReg minstret_increment false
                                              (pure value))
                                          | (0b101110000000, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcycle (Sail.BitVec.updateSubrange
                                                    (← readReg mcycle) 63 32 value)
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB80 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b101110000010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstret (Sail.BitVec.updateSubrange
                                                    (← readReg minstret) 63 32 value)
                                                  writeReg minstret_increment false
                                                  (pure value))
                                              else
                                                (do
                                                  match ((0xB82 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000000000001, value) =>
                                            (do
                                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                          | (0b000000000010, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                                          | (0b000000000011, value) =>
                                            (do
                                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                                (Sail.BitVec.extractLsb value 4 0))
                                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                                  (← readReg fcsr))))
                                          | (0b001100100001, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg) value))
                                                  readReg mcyclecfg)
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                                          (← readReg mcyclecfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg mcyclecfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x321 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100001, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                                      (← readReg mcyclecfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg mcyclecfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg mcyclecfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x721 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b001100100010, value) =>
                                            (do
                                              bif (xlen == 64)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg) value))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) (xlen -i 1) 0)))
                                              else
                                                (do
                                                  bif (xlen == 32)
                                                  then
                                                    (do
                                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                                          (← readReg minstretcfg)
                                                          ((Sail.BitVec.extractLsb
                                                              (← readReg minstretcfg) 63 32) ++ value)))
                                                      (pure (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) (xlen -i 1) 0)))
                                                  else
                                                    (do
                                                      match ((0x322 : (BitVec 12)), value) with
                                                      | (csr, _) =>
                                                        (internal_error "riscv_csr_end.sail" 23
                                                          (HAppend.hAppend
                                                            "Write to CSR that does not exist: "
                                                            (BitVec.toFormatted csr))))))
                                          | (0b011100100010, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                                      (← readReg minstretcfg)
                                                      (value ++ (Sail.BitVec.extractLsb
                                                          (← readReg minstretcfg) 31 0))))
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg minstretcfg) 63 32)))
                                              else
                                                (do
                                                  match ((0x722 : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000101001101, value) =>
                                            (do
                                              writeReg stimecmp (Sail.BitVec.updateSubrange
                                                (← readReg stimecmp) (xlen -i 1) 0 value)
                                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                                  (xlen -i 1) 0)))
                                          | (0b000101011101, value) =>
                                            (do
                                              bif (xlen == 32)
                                              then
                                                (do
                                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                                    (← readReg stimecmp) 63 32 value)
                                                  (pure (Sail.BitVec.extractLsb
                                                      (← readReg stimecmp) 63 32)))
                                              else
                                                (do
                                                  match ((0x15D : (BitVec 12)), value) with
                                                  | (csr, _) =>
                                                    (internal_error "riscv_csr_end.sail" 23
                                                      (HAppend.hAppend
                                                        "Write to CSR that does not exist: "
                                                        (BitVec.toFormatted csr)))))
                                          | (0b000110000000, value) =>
                                            (do
                                              writeReg satp (← (legalize_satp
                                                  (← (cur_architecture ())) (← readReg satp)
                                                  value))
                                              readReg satp)
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011000,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounter index value)
                  (read_mhpmcounter index))
              else
                (do
                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011100,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounterh index value)
                  (read_mhpmcounterh index))
              else
                (do
                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b0111001,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmeventh index value)
                  (read_mhpmeventh index))
              else
                (do
                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000010101, value) => (pure (write_seed_csr ()))
          | (0b101100000000, value) =>
            (do
              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0 value)
              (pure value))
          | (0b101100000010, value) =>
            (do
              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) (xlen -i 1) 0
                value)
              writeReg minstret_increment false
              (pure value))
          | (0b101110000000, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32 value)
                  (pure value))
              else
                (do
                  match ((0xB80 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b101110000010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32 value)
                  writeReg minstret_increment false
                  (pure value))
              else
                (do
                  match ((0xB82 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000000001, value) =>
            (do
              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr)) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FFLAGS (← readReg fcsr)))))
          | (0b000000000010, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 2 0) (_get_Fcsr_FFLAGS (← readReg fcsr)))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
          | (0b000000000011, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 7 5) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
          | (0b001100100001, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                  readReg mcyclecfg)
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x321 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100001, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
              else
                (do
                  match ((0x721 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b001100100010, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg) value))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x322 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
              else
                (do
                  match ((0x722 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000101001101, value) =>
            (do
              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) (xlen -i 1) 0
                value)
              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
          | (0b000101011101, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32 value)
                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
              else
                (do
                  match ((0x15D : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000110000000, value) =>
            (do
              writeReg satp (← (legalize_satp (← (cur_architecture ())) (← readReg satp) value))
              readReg satp)
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | ([0b00111011,idx:4], value) =>
    (do
      let idx := (BitVec.toNat ((0b00 : (BitVec 2)) ++ idx))
      (pmpWriteAddrReg idx value)
      (pmpReadAddrReg idx))
  | ([0b00111100,idx:4], value) =>
    (do
      let idx := (BitVec.toNat ((0b01 : (BitVec 2)) ++ idx))
      (pmpWriteAddrReg idx value)
      (pmpReadAddrReg idx))
  | ([0b00111101,idx:4], value) =>
    (do
      let idx := (BitVec.toNat ((0b10 : (BitVec 2)) ++ idx))
      (pmpWriteAddrReg idx value)
      (pmpReadAddrReg idx))
  | ([0b00111110,idx:4], value) =>
    (do
      let idx := (BitVec.toNat ((0b11 : (BitVec 2)) ++ idx))
      (pmpWriteAddrReg idx value)
      (pmpReadAddrReg idx))
  | (0b000000001000, value) =>
    (do
      (set_vstart (Sail.BitVec.extractLsb value 15 0))
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vstart))))
  | (0b000000001001, value) =>
    (do
      (ext_write_vcsr (_get_Vcsr_vxrm (← readReg vcsr)) (Sail.BitVec.extractLsb value 0 0))
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxsat (← readReg vcsr)))))
  | (0b000000001010, value) =>
    (do
      (ext_write_vcsr (Sail.BitVec.extractLsb value 1 0) (_get_Vcsr_vxsat (← readReg vcsr)))
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Vcsr_vxrm (← readReg vcsr)))))
  | (0b000000001111, value) =>
    (do
      (ext_write_vcsr (Sail.BitVec.extractLsb value 2 1) (Sail.BitVec.extractLsb value 0 0))
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg vcsr))))
  | (0b000100000101, value) => (set_stvec value)
  | (0b000101000001, value) => (set_xepc Supervisor value)
  | (0b001100000101, value) => (set_mtvec value)
  | (0b001101000001, value) => (set_xepc Machine value)
  | ([0b0011001,index:5], value) =>
    (do
      bif ((BitVec.toNat index) ≥b 3)
      then
        (do
          let index ← do (hpmidx_from_bits index)
          (write_mhpmevent index value)
          (read_mhpmevent index))
      else
        (do
          match (((0b0011001 : (BitVec 7)) ++ index), value) with
          | ([0b1011000,index:5], value) =>
            (do
              bif ((BitVec.toNat index) ≥b 3)
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounter index value)
                  (read_mhpmcounter index))
              else
                (do
                  match (((0b1011000 : (BitVec 7)) ++ index), value) with
                  | ([0b1011100,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmcounterh index value)
                          (read_mhpmcounterh index))
                      else
                        (do
                          match (((0b1011100 : (BitVec 7)) ++ index), value) with
                          | ([0b0111001,index:5], value) =>
                            (do
                              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                              then
                                (do
                                  let index ← do (hpmidx_from_bits index)
                                  (write_mhpmeventh index value)
                                  (read_mhpmeventh index))
                              else
                                (do
                                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                                  | (0b101100000000, value) =>
                                    (do
                                      writeReg mcycle (Sail.BitVec.updateSubrange
                                        (← readReg mcycle) (xlen -i 1) 0 value)
                                      (pure value))
                                  | (0b101100000010, value) =>
                                    (do
                                      writeReg minstret (Sail.BitVec.updateSubrange
                                        (← readReg minstret) (xlen -i 1) 0 value)
                                      writeReg minstret_increment false
                                      (pure value))
                                  | (0b101110000000, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcycle (Sail.BitVec.updateSubrange
                                            (← readReg mcycle) 63 32 value)
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB80 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b101110000010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstret (Sail.BitVec.updateSubrange
                                            (← readReg minstret) 63 32 value)
                                          writeReg minstret_increment false
                                          (pure value))
                                      else
                                        (do
                                          match ((0xB82 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000000000001, value) =>
                                    (do
                                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                                  | (0b000000000010, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                          (_get_Fcsr_FRM (← readReg fcsr)))))
                                  | (0b000000000011, value) =>
                                    (do
                                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                        (Sail.BitVec.extractLsb value 4 0))
                                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                                  | (0b001100100001, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg) value))
                                          readReg mcyclecfg)
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg mcyclecfg (← (legalize_smcntrpmf
                                                  (← readReg mcyclecfg)
                                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                                  (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x321 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100001, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg mcyclecfg (← (legalize_smcntrpmf
                                              (← readReg mcyclecfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg mcyclecfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x721 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b001100100010, value) =>
                                    (do
                                      bif (xlen == 64)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg) value))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                              (xlen -i 1) 0)))
                                      else
                                        (do
                                          bif (xlen == 32)
                                          then
                                            (do
                                              writeReg minstretcfg (← (legalize_smcntrpmf
                                                  (← readReg minstretcfg)
                                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg)
                                                      63 32) ++ value)))
                                              (pure (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) (xlen -i 1) 0)))
                                          else
                                            (do
                                              match ((0x322 : (BitVec 12)), value) with
                                              | (csr, _) =>
                                                (internal_error "riscv_csr_end.sail" 23
                                                  (HAppend.hAppend
                                                    "Write to CSR that does not exist: "
                                                    (BitVec.toFormatted csr))))))
                                  | (0b011100100010, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg minstretcfg (← (legalize_smcntrpmf
                                              (← readReg minstretcfg)
                                              (value ++ (Sail.BitVec.extractLsb
                                                  (← readReg minstretcfg) 31 0))))
                                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63
                                              32)))
                                      else
                                        (do
                                          match ((0x722 : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000101001101, value) =>
                                    (do
                                      writeReg stimecmp (Sail.BitVec.updateSubrange
                                        (← readReg stimecmp) (xlen -i 1) 0 value)
                                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp)
                                          (xlen -i 1) 0)))
                                  | (0b000101011101, value) =>
                                    (do
                                      bif (xlen == 32)
                                      then
                                        (do
                                          writeReg stimecmp (Sail.BitVec.updateSubrange
                                            (← readReg stimecmp) 63 32 value)
                                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                                      else
                                        (do
                                          match ((0x15D : (BitVec 12)), value) with
                                          | (csr, _) =>
                                            (internal_error "riscv_csr_end.sail" 23
                                              (HAppend.hAppend "Write to CSR that does not exist: "
                                                (BitVec.toFormatted csr)))))
                                  | (0b000110000000, value) =>
                                    (do
                                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                          (← readReg satp) value))
                                      readReg satp)
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b1011100,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounterh index value)
                  (read_mhpmcounterh index))
              else
                (do
                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b0111001,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmeventh index value)
                  (read_mhpmeventh index))
              else
                (do
                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000010101, value) => (pure (write_seed_csr ()))
          | (0b101100000000, value) =>
            (do
              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0 value)
              (pure value))
          | (0b101100000010, value) =>
            (do
              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) (xlen -i 1) 0
                value)
              writeReg minstret_increment false
              (pure value))
          | (0b101110000000, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32 value)
                  (pure value))
              else
                (do
                  match ((0xB80 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b101110000010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32 value)
                  writeReg minstret_increment false
                  (pure value))
              else
                (do
                  match ((0xB82 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000000001, value) =>
            (do
              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr)) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FFLAGS (← readReg fcsr)))))
          | (0b000000000010, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 2 0) (_get_Fcsr_FFLAGS (← readReg fcsr)))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
          | (0b000000000011, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 7 5) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
          | (0b001100100001, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                  readReg mcyclecfg)
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x321 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100001, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
              else
                (do
                  match ((0x721 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b001100100010, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg) value))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x322 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
              else
                (do
                  match ((0x722 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000101001101, value) =>
            (do
              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) (xlen -i 1) 0
                value)
              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
          | (0b000101011101, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32 value)
                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
              else
                (do
                  match ((0x15D : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000110000000, value) =>
            (do
              writeReg satp (← (legalize_satp (← (cur_architecture ())) (← readReg satp) value))
              readReg satp)
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | ([0b1011000,index:5], value) =>
    (do
      bif ((BitVec.toNat index) ≥b 3)
      then
        (do
          let index ← do (hpmidx_from_bits index)
          (write_mhpmcounter index value)
          (read_mhpmcounter index))
      else
        (do
          match (((0b1011000 : (BitVec 7)) ++ index), value) with
          | ([0b1011100,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmcounterh index value)
                  (read_mhpmcounterh index))
              else
                (do
                  match (((0b1011100 : (BitVec 7)) ++ index), value) with
                  | ([0b0111001,index:5], value) =>
                    (do
                      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
                      then
                        (do
                          let index ← do (hpmidx_from_bits index)
                          (write_mhpmeventh index value)
                          (read_mhpmeventh index))
                      else
                        (do
                          match (((0b0111001 : (BitVec 7)) ++ index), value) with
                          | (0b000000010101, value) => (pure (write_seed_csr ()))
                          | (0b101100000000, value) =>
                            (do
                              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                (xlen -i 1) 0 value)
                              (pure value))
                          | (0b101100000010, value) =>
                            (do
                              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                                (xlen -i 1) 0 value)
                              writeReg minstret_increment false
                              (pure value))
                          | (0b101110000000, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle)
                                    63 32 value)
                                  (pure value))
                              else
                                (do
                                  match ((0xB80 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b101110000010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstret (Sail.BitVec.updateSubrange
                                    (← readReg minstret) 63 32 value)
                                  writeReg minstret_increment false
                                  (pure value))
                              else
                                (do
                                  match ((0xB82 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000000000001, value) =>
                            (do
                              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                          | (0b000000000010, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                                (_get_Fcsr_FFLAGS (← readReg fcsr)))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8))
                                  (_get_Fcsr_FRM (← readReg fcsr)))))
                          | (0b000000000011, value) =>
                            (do
                              (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                                (Sail.BitVec.extractLsb value 4 0))
                              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                          | (0b001100100001, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg) value))
                                  readReg mcyclecfg)
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg mcyclecfg (← (legalize_smcntrpmf
                                          (← readReg mcyclecfg)
                                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x321 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100001, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg mcyclecfg (← (legalize_smcntrpmf
                                      (← readReg mcyclecfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                              else
                                (do
                                  match ((0x721 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b001100100010, value) =>
                            (do
                              bif (xlen == 64)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg) value))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                      (xlen -i 1) 0)))
                              else
                                (do
                                  bif (xlen == 32)
                                  then
                                    (do
                                      writeReg minstretcfg (← (legalize_smcntrpmf
                                          (← readReg minstretcfg)
                                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg)
                                          (xlen -i 1) 0)))
                                  else
                                    (do
                                      match ((0x322 : (BitVec 12)), value) with
                                      | (csr, _) =>
                                        (internal_error "riscv_csr_end.sail" 23
                                          (HAppend.hAppend "Write to CSR that does not exist: "
                                            (BitVec.toFormatted csr))))))
                          | (0b011100100010, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg minstretcfg (← (legalize_smcntrpmf
                                      (← readReg minstretcfg)
                                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31
                                          0))))
                                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                              else
                                (do
                                  match ((0x722 : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000101001101, value) =>
                            (do
                              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                                (xlen -i 1) 0 value)
                              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                          | (0b000101011101, value) =>
                            (do
                              bif (xlen == 32)
                              then
                                (do
                                  writeReg stimecmp (Sail.BitVec.updateSubrange
                                    (← readReg stimecmp) 63 32 value)
                                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                              else
                                (do
                                  match ((0x15D : (BitVec 12)), value) with
                                  | (csr, _) =>
                                    (internal_error "riscv_csr_end.sail" 23
                                      (HAppend.hAppend "Write to CSR that does not exist: "
                                        (BitVec.toFormatted csr)))))
                          | (0b000110000000, value) =>
                            (do
                              writeReg satp (← (legalize_satp (← (cur_architecture ()))
                                  (← readReg satp) value))
                              readReg satp)
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | ([0b0111001,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmeventh index value)
                  (read_mhpmeventh index))
              else
                (do
                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000010101, value) => (pure (write_seed_csr ()))
          | (0b101100000000, value) =>
            (do
              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0 value)
              (pure value))
          | (0b101100000010, value) =>
            (do
              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) (xlen -i 1) 0
                value)
              writeReg minstret_increment false
              (pure value))
          | (0b101110000000, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32 value)
                  (pure value))
              else
                (do
                  match ((0xB80 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b101110000010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32 value)
                  writeReg minstret_increment false
                  (pure value))
              else
                (do
                  match ((0xB82 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000000001, value) =>
            (do
              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr)) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FFLAGS (← readReg fcsr)))))
          | (0b000000000010, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 2 0) (_get_Fcsr_FFLAGS (← readReg fcsr)))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
          | (0b000000000011, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 7 5) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
          | (0b001100100001, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                  readReg mcyclecfg)
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x321 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100001, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
              else
                (do
                  match ((0x721 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b001100100010, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg) value))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x322 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
              else
                (do
                  match ((0x722 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000101001101, value) =>
            (do
              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) (xlen -i 1) 0
                value)
              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
          | (0b000101011101, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32 value)
                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
              else
                (do
                  match ((0x15D : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000110000000, value) =>
            (do
              writeReg satp (← (legalize_satp (← (cur_architecture ())) (← readReg satp) value))
              readReg satp)
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | ([0b1011100,index:5], value) =>
    (do
      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
      then
        (do
          let index ← do (hpmidx_from_bits index)
          (write_mhpmcounterh index value)
          (read_mhpmcounterh index))
      else
        (do
          match (((0b1011100 : (BitVec 7)) ++ index), value) with
          | ([0b0111001,index:5], value) =>
            (do
              bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
              then
                (do
                  let index ← do (hpmidx_from_bits index)
                  (write_mhpmeventh index value)
                  (read_mhpmeventh index))
              else
                (do
                  match (((0b0111001 : (BitVec 7)) ++ index), value) with
                  | (0b000000010101, value) => (pure (write_seed_csr ()))
                  | (0b101100000000, value) =>
                    (do
                      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0
                        value)
                      (pure value))
                  | (0b101100000010, value) =>
                    (do
                      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret)
                        (xlen -i 1) 0 value)
                      writeReg minstret_increment false
                      (pure value))
                  | (0b101110000000, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32
                            value)
                          (pure value))
                      else
                        (do
                          match ((0xB80 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b101110000010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32
                            value)
                          writeReg minstret_increment false
                          (pure value))
                      else
                        (do
                          match ((0xB82 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000000000001, value) =>
                    (do
                      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr))
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8))
                          (_get_Fcsr_FFLAGS (← readReg fcsr)))))
                  | (0b000000000010, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 2 0)
                        (_get_Fcsr_FFLAGS (← readReg fcsr)))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
                  | (0b000000000011, value) =>
                    (do
                      (write_fcsr (Sail.BitVec.extractLsb value 7 5)
                        (Sail.BitVec.extractLsb value 4 0))
                      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
                  | (0b001100100001, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                          readReg mcyclecfg)
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x321 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100001, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
                      else
                        (do
                          match ((0x721 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b001100100010, value) =>
                    (do
                      bif (xlen == 64)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              value))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                      else
                        (do
                          bif (xlen == 32)
                          then
                            (do
                              writeReg minstretcfg (← (legalize_smcntrpmf
                                  (← readReg minstretcfg)
                                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                          else
                            (do
                              match ((0x322 : (BitVec 12)), value) with
                              | (csr, _) =>
                                (internal_error "riscv_csr_end.sail" 23
                                  (HAppend.hAppend "Write to CSR that does not exist: "
                                    (BitVec.toFormatted csr))))))
                  | (0b011100100010, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
                      else
                        (do
                          match ((0x722 : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000101001101, value) =>
                    (do
                      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp)
                        (xlen -i 1) 0 value)
                      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
                  | (0b000101011101, value) =>
                    (do
                      bif (xlen == 32)
                      then
                        (do
                          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32
                            value)
                          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
                      else
                        (do
                          match ((0x15D : (BitVec 12)), value) with
                          | (csr, _) =>
                            (internal_error "riscv_csr_end.sail" 23
                              (HAppend.hAppend "Write to CSR that does not exist: "
                                (BitVec.toFormatted csr)))))
                  | (0b000110000000, value) =>
                    (do
                      writeReg satp (← (legalize_satp (← (cur_architecture ()))
                          (← readReg satp) value))
                      readReg satp)
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000010101, value) => (pure (write_seed_csr ()))
          | (0b101100000000, value) =>
            (do
              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0 value)
              (pure value))
          | (0b101100000010, value) =>
            (do
              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) (xlen -i 1) 0
                value)
              writeReg minstret_increment false
              (pure value))
          | (0b101110000000, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32 value)
                  (pure value))
              else
                (do
                  match ((0xB80 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b101110000010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32 value)
                  writeReg minstret_increment false
                  (pure value))
              else
                (do
                  match ((0xB82 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000000001, value) =>
            (do
              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr)) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FFLAGS (← readReg fcsr)))))
          | (0b000000000010, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 2 0) (_get_Fcsr_FFLAGS (← readReg fcsr)))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
          | (0b000000000011, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 7 5) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
          | (0b001100100001, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                  readReg mcyclecfg)
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x321 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100001, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
              else
                (do
                  match ((0x721 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b001100100010, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg) value))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x322 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
              else
                (do
                  match ((0x722 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000101001101, value) =>
            (do
              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) (xlen -i 1) 0
                value)
              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
          | (0b000101011101, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32 value)
                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
              else
                (do
                  match ((0x15D : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000110000000, value) =>
            (do
              writeReg satp (← (legalize_satp (← (cur_architecture ())) (← readReg satp) value))
              readReg satp)
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | ([0b0111001,index:5], value) =>
    (do
      bif ((xlen == 32) && (((BitVec.toNat index) ≥b 3) : Bool))
      then
        (do
          let index ← do (hpmidx_from_bits index)
          (write_mhpmeventh index value)
          (read_mhpmeventh index))
      else
        (do
          match (((0b0111001 : (BitVec 7)) ++ index), value) with
          | (0b000000010101, value) => (pure (write_seed_csr ()))
          | (0b101100000000, value) =>
            (do
              writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0 value)
              (pure value))
          | (0b101100000010, value) =>
            (do
              writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) (xlen -i 1) 0
                value)
              writeReg minstret_increment false
              (pure value))
          | (0b101110000000, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32 value)
                  (pure value))
              else
                (do
                  match ((0xB80 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b101110000010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32 value)
                  writeReg minstret_increment false
                  (pure value))
              else
                (do
                  match ((0xB82 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000000000001, value) =>
            (do
              (write_fcsr (_get_Fcsr_FRM (← readReg fcsr)) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FFLAGS (← readReg fcsr)))))
          | (0b000000000010, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 2 0) (_get_Fcsr_FFLAGS (← readReg fcsr)))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
          | (0b000000000011, value) =>
            (do
              (write_fcsr (Sail.BitVec.extractLsb value 7 5) (Sail.BitVec.extractLsb value 4 0))
              (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
          | (0b001100100001, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
                  readReg mcyclecfg)
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                          ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x321 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100001, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
              else
                (do
                  match ((0x721 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b001100100010, value) =>
            (do
              bif (xlen == 64)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg) value))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
              else
                (do
                  bif (xlen == 32)
                  then
                    (do
                      writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                          ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
                      (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
                  else
                    (do
                      match ((0x322 : (BitVec 12)), value) with
                      | (csr, _) =>
                        (internal_error "riscv_csr_end.sail" 23
                          (HAppend.hAppend "Write to CSR that does not exist: "
                            (BitVec.toFormatted csr))))))
          | (0b011100100010, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                      (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
                  (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
              else
                (do
                  match ((0x722 : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000101001101, value) =>
            (do
              writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) (xlen -i 1) 0
                value)
              (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
          | (0b000101011101, value) =>
            (do
              bif (xlen == 32)
              then
                (do
                  writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32 value)
                  (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
              else
                (do
                  match ((0x15D : (BitVec 12)), value) with
                  | (csr, _) =>
                    (internal_error "riscv_csr_end.sail" 23
                      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
          | (0b000110000000, value) =>
            (do
              writeReg satp (← (legalize_satp (← (cur_architecture ())) (← readReg satp) value))
              readReg satp)
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b000000010101, value) => (pure (write_seed_csr ()))
  | (0b101100000000, value) =>
    (do
      writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) (xlen -i 1) 0 value)
      (pure value))
  | (0b101100000010, value) =>
    (do
      writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) (xlen -i 1) 0 value)
      writeReg minstret_increment false
      (pure value))
  | (0b101110000000, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg mcycle (Sail.BitVec.updateSubrange (← readReg mcycle) 63 32 value)
          (pure value))
      else
        (do
          match ((0xB80 : (BitVec 12)), value) with
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b101110000010, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg minstret (Sail.BitVec.updateSubrange (← readReg minstret) 63 32 value)
          writeReg minstret_increment false
          (pure value))
      else
        (do
          match ((0xB82 : (BitVec 12)), value) with
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b000000000001, value) =>
    (do
      (write_fcsr (_get_Fcsr_FRM (← readReg fcsr)) (Sail.BitVec.extractLsb value 4 0))
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FFLAGS (← readReg fcsr)))))
  | (0b000000000010, value) =>
    (do
      (write_fcsr (Sail.BitVec.extractLsb value 2 0) (_get_Fcsr_FFLAGS (← readReg fcsr)))
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (_get_Fcsr_FRM (← readReg fcsr)))))
  | (0b000000000011, value) =>
    (do
      (write_fcsr (Sail.BitVec.extractLsb value 7 5) (Sail.BitVec.extractLsb value 4 0))
      (pure (zero_extend (m := ((2 ^i 3) *i 8)) (← readReg fcsr))))
  | (0b001100100001, value) =>
    (do
      bif (xlen == 64)
      then
        (do
          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg) value))
          readReg mcyclecfg)
      else
        (do
          bif (xlen == 32)
          then
            (do
              writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
                  ((Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32) ++ value)))
              (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) (xlen -i 1) 0)))
          else
            (do
              match ((0x321 : (BitVec 12)), value) with
              | (csr, _) =>
                (internal_error "riscv_csr_end.sail" 23
                  (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr))))))
  | (0b011100100001, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg mcyclecfg (← (legalize_smcntrpmf (← readReg mcyclecfg)
              (value ++ (Sail.BitVec.extractLsb (← readReg mcyclecfg) 31 0))))
          (pure (Sail.BitVec.extractLsb (← readReg mcyclecfg) 63 32)))
      else
        (do
          match ((0x721 : (BitVec 12)), value) with
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b001100100010, value) =>
    (do
      bif (xlen == 64)
      then
        (do
          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg) value))
          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
      else
        (do
          bif (xlen == 32)
          then
            (do
              writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
                  ((Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32) ++ value)))
              (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) (xlen -i 1) 0)))
          else
            (do
              match ((0x322 : (BitVec 12)), value) with
              | (csr, _) =>
                (internal_error "riscv_csr_end.sail" 23
                  (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr))))))
  | (0b011100100010, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg minstretcfg (← (legalize_smcntrpmf (← readReg minstretcfg)
              (value ++ (Sail.BitVec.extractLsb (← readReg minstretcfg) 31 0))))
          (pure (Sail.BitVec.extractLsb (← readReg minstretcfg) 63 32)))
      else
        (do
          match ((0x722 : (BitVec 12)), value) with
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b000101001101, value) =>
    (do
      writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) (xlen -i 1) 0 value)
      (pure (Sail.BitVec.extractLsb (← readReg stimecmp) (xlen -i 1) 0)))
  | (0b000101011101, value) =>
    (do
      bif (xlen == 32)
      then
        (do
          writeReg stimecmp (Sail.BitVec.updateSubrange (← readReg stimecmp) 63 32 value)
          (pure (Sail.BitVec.extractLsb (← readReg stimecmp) 63 32)))
      else
        (do
          match ((0x15D : (BitVec 12)), value) with
          | (csr, _) =>
            (internal_error "riscv_csr_end.sail" 23
              (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))))
  | (0b000110000000, value) =>
    (do
      writeReg satp (← (legalize_satp (← (cur_architecture ())) (← readReg satp) value))
      readReg satp)
  | (csr, _) =>
    (internal_error "riscv_csr_end.sail" 23
      (HAppend.hAppend "Write to CSR that does not exist: " (BitVec.toFormatted csr)))

/-- Type quantifiers: k_ex298774# : Bool -/
def doCSR (csr : (BitVec 12)) (rs1_val : (BitVec (2 ^ 3 * 8))) (rd : regidx) (op : csrop) (is_CSR_Write : Bool) : SailM ExecutionResult := do
  bif (not (← (check_CSR csr (← readReg cur_privilege) is_CSR_Write)))
  then (pure (Illegal_Instruction ()))
  else
    (do
      bif (not (ext_check_CSR csr (← readReg cur_privilege) is_CSR_Write))
      then (pure (Ext_CSR_Check_Failure ()))
      else
        (do
          let is_CSR_Read := (not ((op == CSRRW) && (rd == zreg)))
          let csr_val ← (( do
            bif is_CSR_Read
            then (read_CSR csr)
            else (pure (zeros (n := ((2 ^i 3) *i 8)))) ) : SailM xlenbits )
          bif is_CSR_Write
          then
            (do
              let new_val : xlenbits :=
                match op with
                | CSRRW => rs1_val
                | CSRRS => (csr_val ||| rs1_val)
                | CSRRC => (csr_val &&& (Complement.complement rs1_val))
              let final_val ← do (write_CSR csr new_val)
              (csr_id_write_callback csr final_val))
          else (csr_id_read_callback csr csr_val)
          (wX_bits rd csr_val)
          (pure RETIRE_SUCCESS)))

def csr_mnemonic_backwards (arg_ : String) : SailM csrop := do
  match arg_ with
  | "csrrw" => (pure CSRRW)
  | "csrrs" => (pure CSRRS)
  | "csrrc" => (pure CSRRC)
  | _ =>
    (do
      assert false "Pattern match failure at unknown location"
      throw Error.Exit)

def csr_mnemonic_forwards_matches (arg_ : csrop) : Bool :=
  match arg_ with
  | CSRRW => true
  | CSRRS => true
  | CSRRC => true
  | _ => false

def csr_mnemonic_backwards_matches (arg_ : String) : Bool :=
  match arg_ with
  | "csrrw" => true
  | "csrrs" => true
  | "csrrc" => true
  | _ => false

